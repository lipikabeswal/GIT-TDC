<library>
	<include href="CachablePanel.lzx"/>

	<!-- ************************************
         CachableAnswerAreaPanel
         
         A cachable answer area panel.  
         *************************************-->
	<class name="CachableAnswerAreaPanel" extends="CachablePanel" 
           comptype="${gCompTypes.WIDGET_ANSWER_AREA_PANEL}"
           bgcolor="0xFFFFB0" clip="true">

        <attribute name="fontMagnification" type="number" value="1"/>
        
        <method name="_initSubnodes"><![CDATA[
            var subnodes = this.datapath.p.childNodes;
        
            var containsAutoEnlargeImages = this.datapath.xpathQuery(
                "answer_choice_widget/image_widget[@autoenlargeable='yes']");

            this.setAttribute("fontMagnification", 
                this.fontsize/canvas.basefontsize);
        
            if((this.fontMagnification > 1) && 
               (this.data.getAttr("layout") == "horizontal") &&
               (containsAutoEnlargeImages != null))
            {
                // In the horizontal layout, we allow the choices to grow to the
                // width of the answer area panel divided by the number of choices                
                var maxWidth = this.data.getAttr("width");
                var answerChoices = 
                    this.datapath.xpathQuery("answer_choice_widget");
                
                if(answerChoices instanceof lz.DataElement) {
                    answerChoices = new Array(answerChoices);
                }
                
                var maxElemSize = maxWidth / answerChoices.length;
                
                for(var i in answerChoices)
                {

                    var newWidth = maxElemSize;
                    if(answerChoices[i].hasAttr("width")) 
                    {
                        var oldWidth = 
                            Number(answerChoices[i].getAttr("width"));
    
                        newWidth = Math.min(oldWidth * this.fontMagnification,
                            newWidth);
                
                    }
                    
                    answerChoices[i].setAttr("width", newWidth);
                    Debug.write("kkkkkkkkkk"+answerChoices[i].width);
                }

            }

            super._initSubnodes();                
        ]]></method>
        
    </class>
</library>