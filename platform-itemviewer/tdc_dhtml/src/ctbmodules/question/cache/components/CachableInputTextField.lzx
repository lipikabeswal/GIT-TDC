<library>
    <include href="CachableComponent.lzx"/>
    <include href="../../../Controllers/ReadableText.lzx"/>
    <!-- ===============
         ==
         == CachableInputTextField
         ==
         ==  A cachable text field to be used with inline cr answer area.  
         ==
         =============== -->

    <class name="CachableInputTextField" extends="CachableComponent" 
           comptype="$once {gCompTypes.WIDGET_INPUT_TEXT}" aaactive="true" aasilent="false"> 

		<attribute name="altText" type="string" />
	     <attribute name="hlstatus" value="$once{new lz.datapointer()}"/>
		<attribute name="isHighlighter" type="boolean" value="false"/>
        <attribute name="eraserstatus" value="$once{new lz.datapointer()}"/>        
		<attribute name="isEraser" type="boolean" value="false"/>
        
        <handler name="ondata" args="data" reference="hlstatus">
            this.setAttribute ('isHighlighter', data == 'sel');
        </handler>

        <handler name="ondata" args="data" reference="eraserstatus">
            this.setAttribute ('isEraser', data == 'sel');
		</handler>

        <method name="init">
            super.init();
        </method>
        
		<method name="setText" args="txt"><![CDATA[
			//contents.thetext.setAttribute('text', txt);
			if (gController.hasFontAccommodation){
				this.contents.thetext.setAttribute("text",
	               '<label><span style="white-space: pre-wrap;">' + txt + '</span></label>');
		   }else{
	           this.contents.thetext.setAttribute("text",
	                '<label><span style="white-space: pre-wrap;">' + txt + '</span></label>');
			}
			//no need for this
			contents.thetext.setAttribute('width', contents.thetext.getTextWidth() + 1);
			]]>
		</method>
		
		<method name="setAltText" args="altTxt">
//Debug.write("CachableInputTextField.setAltText: " + altTxt);
			contents.thetext.setAttribute('altText', altTxt);
			
		</method>
		
			
        <handler name="oninit">
            this.hlstatus.setAttribute ('rerunxpath', true);
            this.eraserstatus.setAttribute ('rerunxpath', true);
 
            this.hlstatus.setXPath('dsstudentdata:/testing_client_model/current_item/item_model/manipulatives/global/@highlighter');
            this.eraserstatus.setXPath('dsstudentdata:/testing_client_model/current_item/item_model/manipulatives/global/@eraser');
        </handler>

    


        <!-- ===============
             = METHODS
             =============== -->
  

        <!-- ===============
             = VIEWS
             =============== -->
        
           <view name="clickregionreader"
                 width="${classroot.contents.thetext.width}"
                 height="${classroot.contents.thetext.height}"
                 clickable="false">
               
           </view>
			
		<view name="contents" clickable="true">
			<handler name="onclick">
					this.thetext.onfocus.sendEvent();
			</handler>
           <text name="thetext" multiline="false" resize="true" clickable="true"
               fgcolor="${classroot.fontcolor}"
               fontsize="${classroot ['fontsize'] ? classroot.fontsize : 12}" width="1">
               <handler name="onclick">
					this.onfocus.sendEvent();
				</handler>
               <handler name="onwidth" args="w"><![CDATA[
					var xin = classroot.parent.parent.comptype == gCompTypes.WIDGET_SCROLLING_TEXT ? 6 : 0;
//					Debug.write('xin..', classroot.parent.parent, classroot.parent.parent.comptype);	
					if(this.width > classroot.parent.width - xin) {
//					Debug.write('this.width, parent.width - xin..',this.width, parent.width - xin);
						this.setAttribute('resize', false);
						this.setAttribute('multiline',true);
						this.setAttribute('width', classroot.parent.width - xin);
						this.setAttribute('height', this.getTextHeight() + 6);
					}
					else {
						this.setAttribute('resize', true);
						this.setAttribute('multiline',false);
					}
               ]]></handler>
           </text>
        </view>
 	</class>
</library>
