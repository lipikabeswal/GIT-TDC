<library>

    <include href="BaseCachablePanel.lzx"/>
    <include href="lib/PanelTab.lzx"/>

    <class name="CachableTabsPanel" extends="BaseCachablePanel"
           comptype="${gCompTypes.WIDGET_STIMULUS_TABS_PANEL}"
           defaultplacement="tabcontents"
           showhandcursor="false">

       <!-- ================================
             method
             ================================= -->
        <!-- When the data changes reset all of our properties/info-->
 		<method name="getEid">
			var dp = datapath.dupePointer();
			dp.selectParent(2);
			return dp.xpathQuery ('@eid');
		</method>
		
        <method name="doReturnToCache"><![CDATA[
            var contsubviews = this.tabs.contents.tabcontents.subviews;
            for (var i in contsubviews) {
                if (contsubviews [i] instanceof CachableComponent) {
                    this.cache.returnComponent (contsubviews [i]);
                }
            }
        ]]></method>
 
        <!-- ================================
             views
             ================================= -->
        <view name="tabs" 
              width="${classroot.width}" 
              height="${classroot.height - classroot.tabctrl.height}"
              y="${classroot.tabctrl.height}">
            <view name="contents"
                  width="100%" 
                  height="100%" >
                <view name="tabcontents" 
                      x="0" 
                      y="0"
                      width="${parent.width}"
                      height="${parent.height}"/>
            </view>
        </view>
        <view name="tabctrl" 
              height="${gController.hasFontAccommodation?41:32}" showhandcursor="false">
            <simplelayout axis="x" spacing="-14" inset="-4"/>
            <PanelTab name="tab" datapath="*" showhandcursor="false">
                <method name="setSelected" args="issel, refresh"><![CDATA[
//          Debug.write("CachableTabsPanel.PanelTab.setSelected", this.clonenumber, issel);
                    if (typeof this.clonenumber != 'undefined') {
	                    if (issel && refresh) {
	                    	var numTabs = parent.tab.clones.length;
	                        // need to select the right previous tab to make the display happy
	                        if(this.clonenumber == 0 && numTabs == 3){
	                        	parent.tab.clones[1].setSelected(true, false);
	                        }
	                        if(this.clonenumber == 2 && numTabs == 3){
	                        	parent.tab.clones[0].setSelected(true, false);
	                        }
	                        for(var i=0; i<numTabs; i++){
	                        	if( i != this.clonenumber){
	                        		parent.tab.clones[i].setSelected(false, false);
	                        	}
	                        }
	                    }
	                    this.select(issel);
	                    var tabpane = classroot.tabs.contents.tabcontents.subviews [this.clonenumber];
						tabpane.setAttribute('visible', issel);
						if(issel){
							gFootNotePopup.setTabTextPanel(tabpane.getTabText());
						}
	                }
               ]]>
               </method>
                 <handler name="oninit">
                	this.initColors();
                	this.selectFirstTab();
                </handler>
                
                <method name="selectFirstTab">
					if(typeof parent.tab.clones != 'undefined'){
						parent.tab.clones[0].setSelected(true, true);
					}
					this.setAttribute('showhandcursor', false);
					parent.setAttribute('showhandcursor', false);
					classroot.setAttribute('showhandcursor', false);
                </method>
                
                </PanelTab>
            </view>
	<handler name="onmouseover">
		// do nothing .. ?? fixes hand cursor highlighter defect
	</handler>

    </class>

</library>