<library>
    <text visible="false" width="0" height="0"
          id="gReadableText" oninit="sendToBack()" options="ignorelayout">

		<attribute name="READ_SPACE" type="string" value="blank" />
		<attribute name="READ_PERIOD" type="string" value="point" />
		<attribute name="READ_SLASH" type="string" value="slash" />
		<attribute name="READ_PREFIX" type="string" value="RWSRT_" />
		<attribute name="SHUTDOWN_COMMAND" type="string" value="RWSHUTDOWN_" />
	
        <method name="init">
            super.init();
        </method>
        <method name="read" args="s"><![CDATA[
        	if ( isReadable ){
	            stopReading();
	            this.setText(s);
 	            LzTimer.addTimer( new LzDelegate( this, 'reallyRead' ), 200 );
            }
        ]]></method>
        
        <method name="getReadableTextForCharacter" args="c">
        	var result = c;
			if(result == null || 
			   result == '' || 
			   result == ' '){
				result = this.READ_SPACE;
			}
			else if(result == '.'){
				result = this.READ_PERIOD;
			}
			else if(result == '/'){
				result = this.READ_SLASH;
			}
			return result;
        </method>
        
		<method name="reallyRead">
	    	setClipboard( READ_PREFIX + this.__LZtextclip.text);
		</method>
		
		<method name="shutdown">
			setClipboard(SHUTDOWN_COMMAND);
		</method>
        <attribute name="highlightFlag"
                   value="$path{'dsstudentdata:/testing_client_model/current_item/item_model/manipulatives/global/@highlighter'}"/>
        <attribute name="eraserFlag"
                   value="$path{'dsstudentdata:/testing_client_model/current_item/item_model/manipulatives/global/@eraser'}"/>
        <attribute name="isReadable"
                   value="${
                             highlightFlag != 'sel' &amp;&amp;
                             eraserFlag != 'sel' &amp;&amp;
                             canvas.readable
                           }"/>
        <method name="setClipboard" args="s">
        	System.setClipboard(s);
        </method>
        
        <method name="stopReading">
        	setClipboard(READ_PREFIX);
        </method>
    </text>

</library>