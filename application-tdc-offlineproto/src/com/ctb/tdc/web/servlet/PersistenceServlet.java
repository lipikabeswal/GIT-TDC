package com.ctb.tdc.web.servlet;
  
import java.io.File;
import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;

import com.ctb.tdc.web.utils.ServletUtils;
     
/** 
 * @author Tai_Truong
 * 
 * This supports response persistence and lifecycle events. 
 * New events are only accepted and persisted locally if prior events were acknowledged by 
 * upstream partner, otherwise an error occurs after a suitable wait/retry cycle. 
 * When prior events have been acknowledged by the TMS, new events generated by the client 
 * are acknowledged by the local servlet as soon as they are securely persisted locally, allowing 
 * the user to continue. Delay (and ultimately, in severe cases, interruption) of test thus only 
 * occur if upstream response time exceeds user 'think' time. To ensure that no responses are 
 * lost, an error is returned immediately in that case.
 */
public class PersistenceServlet extends HttpServlet {
       
    private static final long serialVersionUID = 1L;
    static Logger logger = Logger.getLogger(PersistenceServlet.class);
     
	/**
	 * Constructor of the object.
	 */
	public PersistenceServlet() {
		super();
	}

    /**
     * Initialization of the servlet. <br>
     *
     * @throws ServletException if an error occure
     */
    public void init() throws ServletException {
        // do nothing
    }
        
	/**
	 * Destruction of the servlet. <br>
	 */
	public void destroy() {
		super.destroy(); // Just puts "destroy" string in log
	}

    /**
     * The doPost method of the servlet. <br>
     *
     * This method is called when a form has its tag value method equals to post.
     * 
     * @param request the request send by the client to the server
     * @param response the response send by the server to the client
     * @throws ServletException if an error occurred
     * @throws IOException if an error occurred
     */
    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {    
        	doGet(request, response);            
    }

	/**
	 * The doGet method of the servlet. <br>
	 *
	 * This method is called when a form has its tag value method equals to get.
	 * 
	 * @param request the request send by the client to the server
	 * @param response the response send by the server to the client
	 * @throws ServletException if an error occurred
	 * @throws IOException if an error occurred
	 */
	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {    
		long startTime = System.currentTimeMillis();
        System.out.println("called PersistenceServlet ");
		
		String method = ServletUtils.getMethod(request);
        
        String xml = ServletUtils.getXml(request);
        handleEvent(request, response, method, xml);    
        
        System.out.println(method + ", elapsed time: " + (System.currentTimeMillis() - startTime + "\n"));
	}

    /**
     * The handleEvent method of the servlet. <br>
     * 
     * call the method based on each event, return result response xml to client
     * 
     * @param HttpServletResponse response
     * @param String method
     * @param String xml
     * @throws IOException 
     */
    private void handleEvent(HttpServletRequest request, HttpServletResponse response, String method, String xml) throws IOException {
    	//System.out.println("In handleEvent method");
    	String result = ServletUtils.OK;
        boolean validSettings = true; //ServletUtils.validateServletSettings();
                
        // call method to perform an action only if servlet settings is valid
        if (! validSettings)
            result = ServletUtils.getServletSettingsErrorMessage();
        else if (method != null && method.equals(ServletUtils.VERIFY_SETTINGS_METHOD))
        {
            result = verifyServletSettings();
        }
        else if (method != null && method.equals(ServletUtils.LOGIN_METHOD))
            result = login(request, xml);
        else if (method != null && method.equals(ServletUtils.SAVE_METHOD))
            result = save(response, xml);        
        else if (method != null && method.equals(ServletUtils.FEEDBACK_METHOD))
            result = feedback(xml);        
        else if (method != null && method.equals(ServletUtils.UPLOAD_AUDIT_FILE_METHOD))
            result = uploadAuditFile(xml);
        else if (method != null && method.equals(ServletUtils.WRITE_TO_AUDIT_FILE_METHOD))
            result = writeToAuditFile(xml);
        else
            result = ServletUtils.ERROR;    
        
        // return response to client
        if (result != null) {
            ServletUtils.writeResponse(response, result);
        }
    }
    
    /**
     * The verifyServletSettings method of the servlet. <br>
     * 
     *  verify if values in tdc.properties are valid 
     */
    private String verifyServletSettings() {
        String errorMessage = ServletUtils.OK;                
        //if (! ServletUtils.validateServletSettings()) {
            // return error message if values in properties file are invalid
        //    errorMessage = ServletUtils.getServletSettingsErrorMessage();
        //}
        //else {
            // properties file are valid, now check for TMS connection
            //errorMessage = ServletUtils.httpClientGetStatus();
        //}
        return errorMessage;
    }
    
    private String login(HttpServletRequest request, String xml) {
    	//System.out.println("In login method");
        String result = ServletUtils.ERROR;
        try {
        	String requestURI = request.getRequestURI();
        	String filePath = new File(".").getAbsolutePath() + "/../data/loginresponse.xml";
        	if(requestURI.indexOf("servletAS3") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/loginresponseAS3.xml";
        	} else if(requestURI.indexOf("servletAS4") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/loginresponseAS4.xml";
        	} else if(requestURI.indexOf("servletAS5") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/loginresponseAS5.xml";
        	} else if(requestURI.indexOf("servletAS6") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/loginresponseAS6.xml";
        	} else if(requestURI.indexOf("servletAS7") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/loginresponseAS7.xml";
        	} else if(requestURI.indexOf("servletAS8") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/loginresponseAS8.xml";
        	} else if(requestURI.indexOf("servlet6-8") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/loginresponse6-8.xml";
        	} else if(requestURI.indexOf("servlet5") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/loginresponse5.xml";
        	} else if(requestURI.indexOf("servlet4") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/loginresponse4.xml";
        	} else if(requestURI.indexOf("servlet3") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/loginresponse3.xml";
        	} else if(requestURI.indexOf("servletii1") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/IIloginresponse1.xml";
        	} else if(requestURI.indexOf("servletTABEFixed") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/TABEFixedloginresponse.xml";
        	} else if(requestURI.indexOf("servletTN312") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/TN312loginresponse.xml";
        	} else if(requestURI.indexOf("servletTN313") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/TN313loginresponse.xml";
        	} else if(requestURI.indexOf("servletTN314") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/TN314loginresponse.xml";
        	} else if(requestURI.indexOf("servletTN316") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/TN316loginresponse.xml";
        	} else if(requestURI.indexOf("servletTABEAdaptive") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/TABEAdaptiveloginresponse.xml";
        	} else if(requestURI.indexOf("servletOKAlg1") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/OKAlg1loginresponse.xml";
        	} else if(requestURI.indexOf("servletOKAlg2") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/OKAlg2loginresponse.xml";
        	} else if(requestURI.indexOf("servletOKBio1") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/OKBio1loginresponse.xml";
        	} else if(requestURI.indexOf("servletOKEng2") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/OKEng2loginresponse.xml";
        	} else if(requestURI.indexOf("servletOKEng3") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/OKEng3loginresponse.xml";
        	} else if(requestURI.indexOf("servletOKGeo") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/OKGeologinresponse.xml";
        	} else if(requestURI.indexOf("servletOKUSH") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/OKUSHloginresponse.xml";
        	} else if(requestURI.indexOf("servletOK38Math6") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/OK38Math6loginresponse.xml";
        	} else if(requestURI.indexOf("servletOK38Math7") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/OK38Math7loginresponse.xml";
        	} else if(requestURI.indexOf("servletOK38Math8") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/OK38Math8loginresponse.xml";
        	} else if(requestURI.indexOf("servletOK38Read6") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/OK38Read6loginresponse.xml";
        	} else if(requestURI.indexOf("servletOK38Read7") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/OK38Read7loginresponse.xml";
        	} else if(requestURI.indexOf("servletOK38Read8") >= 0) {
        		filePath = new File(".").getAbsolutePath() + "/../data/OK38Read8loginresponse.xml";
        	}
        	//Changes for Story 'GA - LearnOAS - create Experience Online site'
        	 else if(requestURI.indexOf("servletGACRCTReadGrade3") >= 0) {
         		filePath = new File(".").getAbsolutePath() + "/../data/GACRCTGrade3ReadLoginResponse.xml";
         	}
        	 else if(requestURI.indexOf("servletGACRCTReadGrade5") >= 0) {
            		filePath = new File(".").getAbsolutePath() + "/../data/GACRCTGrade5ReadLoginResponse.xml";
            	}
        	 else if(requestURI.indexOf("servletGACRCTMathGrade5") >= 0) {
           		filePath = new File(".").getAbsolutePath() + "/../data/GACRCTGrade5MathLoginResponse.xml";
           	}
        	 else if(requestURI.indexOf("servletGACRCTReadGrade8") >= 0) {
           		filePath = new File(".").getAbsolutePath() + "/../data/GACRCTGrade8ReadLoginResponse.xml";
           	}
        	 else if(requestURI.indexOf("servletGACRCTMathGrade8") >= 0) {
          		filePath = new File(".").getAbsolutePath() + "/../data/GACRCTGrade8MathLoginResponse.xml";
          	}   	
        	System.out.println("***** Looking for login response XML: " + filePath);
            result = new String(ServletUtils.readFromFile(new File(filePath)));
        	ServletUtils.processContentKeys(result);
        	System.out.println("Login successful:" + result);                
        } 
        catch (Exception e) {
        	System.out.println("Exception occured in login() : " + ServletUtils.printStackTrace(e));
            result = ServletUtils.buildXmlErrorMessage("", e.getMessage(), ""); 
        }
        return result;
    }
    
    private String feedback(String xml) {
    	return ServletUtils.OK;
    }

    private String save(HttpServletResponse response, String xml) {
    	//System.out.println(xml);
    	boolean isEndSubtest = ServletUtils.isEndSubtest(xml);
    	String result = null;
    	if(isEndSubtest) {
    		System.out.println("end subtest");
    		String scid = ServletUtils.parseItemSetId(xml);
    		System.out.println("got scid: " + scid);
    		String endSubtestResponse = "<adssvc_response><save_testing_session_data><tsd lsid=\"1812625:allemand37\" scid=\"" + scid + "\" mseq=\"9\" status=\"OK\">nextScidVal</tsd></save_testing_session_data></adssvc_response>";
    		if("26892".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"26893\"/>");
    		} else if("26893".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"26895\"/>");
    		} else if("26898".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"26899\"/>");
    		} else if("26899".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"26901\"/>");
    		} else if("26904".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"26905\"/>");
    		} else if("26905".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"26907\"/>");
    		} else if("26910".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"26911\"/>");
    		} else if("26911".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"26913\"/>");
    		} else if("272592".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"272373\"/>");
    		} else if("272373".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"272382\"/>");
    		} else if("272382".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"272391\"/>");
    		} else if("272391".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"272400\"/>");
    		} else if("272400".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"272409\"/>");
    		} else if("272409".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"272418\"/>");
    		} else if("272418".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"272427\"/>");
    		} else if("281171".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281173\"/>");
    		} else if("281173".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281175\"/>");
    		} else if("281175".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281177\"/>");
    		} else if("281177".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281179\"/>");
    		} else if("281182".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281184\"/>");
    		} else if("281184".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281186\"/>");
    		} else if("281186".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281188\"/>");
    		} else if("281188".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281190\"/>");
    		} else if("281190".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281192\"/>");
    		} else if("281195".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281197\"/>");
    		} else if("281197".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281199\"/>");
    		} else if("281199".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281201\"/>");
    		} else if("281201".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281203\"/>");
    		} else if("281203".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281205\"/>");
    		} else if("281208".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281210\"/>");
    		} else if("281210".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281212\"/>");
    		} else if("281212".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281214\"/>");
    		} else if("281214".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281216\"/>");
    		} else if("281216".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281218\"/>");
    		} else if("280971".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"280972\"/>");
    		} else if("280975".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"280976\"/>");
    		} else if("280987".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"280988\"/>");
    		} else if("280960".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"280961\"/>");
    		} else if("280964".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"280965\"/>");
    		} else if("280979".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"280980\"/>");
    		} else if("280983".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"280984\"/>");
    		} else if("282113".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"282114\"/>");
    		} else if("282117".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"282118\"/>");
    		} else if("282121".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"282122\"/>");
    		} else if("282122".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"282123\"/>");
    		} else if("282126".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"282127\"/>");
    		} else if("282130".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"282131\"/>");
    		} else if("282131".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"282132\"/>");
    		} else if("282135".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"282136\"/>");
    		} else if("283918".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"283919\"/>");
    		} else if("283927".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"283928\"/>");
    		} else if("283923".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"283924\"/>");
    		} else if("283914".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"283915\"/>");
    		} else if("283931".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"283932\"/>");
    		} else if("283935".equals(scid)) {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"283936\"/>");
    		}
    		//Changes For Story 'GA - LearnOAS - create Experience Online site'
    		  else if("281957".equals(scid)) {
        		endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281958\"/>");
    		}
    		  else if("281958".equals(scid)) {
          		endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281959\"/>");
      		}
    		  else if("281961".equals(scid)) {
            		endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281962\"/>");
        		}
    		  else if("281962".equals(scid)) {
          		endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"281963\"/>");
      		}
    		  else if("284005".equals(scid)) {
            		endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"284006\"/>");
        		}
    		  else if("284006".equals(scid)) {
          		endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"284007\"/>");
      		}
    		  else if("284007".equals(scid)) {
          		endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"284008\"/>");
      		}  
    		  else if("284009".equals(scid)) {
            		endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"284010\"/>");
        		}
    		  else if("284010".equals(scid)) {
            		endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"284011\"/>");
        		}
    		  else if("283986".equals(scid)) {
          		endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"283987\"/>");
      		}
    		  else if("283987".equals(scid)) {
            		endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "<next_sco id=\"283988\"/>");
        		}
    		//283986
    		  else {
    			endSubtestResponse = endSubtestResponse.replaceAll("nextScidVal", "");
    		 }
    		result = endSubtestResponse;
    	} else { 
    		result = ServletUtils.OK;
    	}
    	//System.out.println(result);
    	return result;
    }

    private String writeToAuditFile(String xml) {
        return ServletUtils.OK;
    }
    
    private String uploadAuditFile(String xml) {
    	return ServletUtils.OK;
    }
        
}
