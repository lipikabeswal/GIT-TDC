<view id="gRevisitFalsePopup" 
      valign="middle"
      align="center" 
      visible="false"
      clickable="false"
      showhandcursor="false">

	<attribute name="popupHeight" type="number" value="157"/>
	<attribute name="popupWidth" type="number" value="310"/>
	<attribute name="bg" type="color" value="0xFFFFFF"/>
	<attribute name="fg" type="color" value="0xE0E0E0"/>
	<attribute name="navigateFrom"/>
	
	<!-- the default setup should always be ready as this popup can be shown at login time also -->
	<handler name="oninit">
		setup();
	</handler>
	
	<method name="setup" args="fm, fc, bc"><![CDATA[
//Debug.write("setup: " + this.fm + " , " + this.fc + " , " + this.bc);
		if(fc != null && fc.length > 0){
			this.setAttribute("fg", new Number(this.fc));
		}
		else{
			this.setAttribute("fg", new Number("0xE0E0E0"));
		}
		if(bc != null && bc.length > 0){
			this.setAttribute("bg", new Number(bc));
		}
		else{
			this.setAttribute("bg", new Number("0x1D4896"));
		}
		this.windowbg.drawMe();
	]]></method>
	
	<method name="hide">
        this.setAttribute("visible", false);	
		LzModeManager.release(this);	
		gHotKeys.enableKeys();
    </method>
	
    <method name="show" args="calledFrom">
	    if(this.visible == false) {
	        this.setAttribute("visible", true);
			this.setAttribute("navigateFrom",calledFrom);
	        LzModeManager.makeModal(this);
	        gHotKeys.disableKeys();
	     }
    </method>

	
    <drawview name="windowbg" width="${parent.popupWidth}" height="${parent.popupHeight}">

        <method name="drawMe">
            this.clear();
            
            var roundness = 5;
            var thickness = 3;
            var shadow = 4;

            this.changeColor(parent.bg, parent.fg);
         </method>

        <method name="changeColor" args="bgcolor, fgcolor">
            var roundness = 5;
            var thickness = 0;

            drawRoundRect (thickness, thickness, this.width, this.height, 
                           roundness,
                           bgcolor, fgcolor, 1);
        </method>

        <method name="drawRoundRect" args="x0, y0, x1, y1, roundness, fill, stroke, alpha">
			
            this.beginPath();
            this.rect(x0 , y0 , x1 , y1 , roundness);

            this.closePath();
            this.setAttribute("globalAlpha", alpha);

            if (fill) {
                this.setAttribute("fillStyle", fill);
                this.fill();
            }
            if (stroke) {
                this.setAttribute("strokeStyle", stroke);
                this.stroke();
            }

            this.setAttribute("globalAlpha", 1);
        </method>

    </drawview>

    <view name="contents" x="5" y="5"
          width="${parent.windowbg.width - 10}" height="${parent.windowbg.height - 10}" bgcolor="0xC0C0C0"><!--97B8E2"-->
		         
        <text name="revisitFalse" 
        	  font="CTB"	
              fontsize="15"
              fgcolor="0x000000"
              width="260"
              multiline="true" y="20" align="center">
				You may not return to this question once you move on. Do you want to stay on this screen?
		</text>        
		<basebutton	name="okButton"	resource="popupOk" x="46" y="110" width="70" height="25" stretches="both">
		<method event="onclick">
gController.setNavigation(0,parent.parent.getAttribute("navigateFrom"));        
        </method>
		</basebutton>
		<basebutton	name="cancelButton"	resource="popupCancel" x="164" y="110" width="85" height="25" stretches="both">
		<method event="onclick">
gController.setNavigation(1,parent.parent.getAttribute("navigateFrom"));  
        </method>
		</basebutton>
    </view>
</view>