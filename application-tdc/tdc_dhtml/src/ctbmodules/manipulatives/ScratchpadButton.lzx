<library>

    <class name="ScratchpadButton" with="swipegesture, touchevents">
        <datapath/>

        <attribute name="toolid" type="string"/>
        <attribute name="isenabled" value="false"/>
        <attribute name="isselected" value="false"/>
        <attribute name="tooltip" type="string"/>
		<attribute name="scratchpadOpen" type="boolean" value="${gController.scratchpadOpen}" />
        <attribute name="tooltipdel" value="$once{new lz.Delegate (this, 'showTooltip')}"/>
        <attribute name="btnResource" type="string"/>
        <attribute name="isswiped" type="boolean" value="false"/>

        <handler name="oninit">
            this.datapath.setXPath ('@' + this.toolid);
        </handler>
		
		<handler name="onscratchpadOpen">
        	this.setAttribute('isselected', scratchpadOpen);

            this.scratchpadBtn.setAttribute('frame', this.isselected ? 2 : 1);

            if (!this.isselected) {
                this.scratchpadBtn.setAttribute('frame', this.isenabled  ? 1 : 3);
            }
            
		</handler>
		
        <handler name="ondata" args="data"><![CDATA[
           	if(data == null || data == 'disable'){
	            this.setAttribute ('isenabled', false);
	            this.scratchpadBtn.setAttribute ('visible', false);
				this.scratchpadBtn_shadow.setAttribute ('visible', false);
				this.gap.setAttribute ('visible', false);
            }
            else{
	            this.setAttribute ('isenabled', true);
	            this.scratchpadBtn.setAttribute ('visible', true);
				this.scratchpadBtn_shadow.setAttribute ('visible', true);
				this.scratchpadBtn_shadow.sendToBack();
				this.gap.setAttribute ('visible', true);
            }

            this.scratchpadBtn.setAttribute('frame', this.isselected ? 2 : 1);

            if (!this.isselected) {
                this.scratchpadBtn.setAttribute('frame', this.isenabled  ? 1 : 3);
            }
            
        ]]></handler>

		<view name="scratchpadBtn" width="37" height="40" stretches="both" resource="${classroot.btnResource}">
	        <handler name="onmouseover"><![CDATA[
	            if (!classroot.isselected && classroot.isenabled) this.setAttribute('frame', 2); 
	            lz.Timer.addTimer (classroot.tooltipdel, 500);
	        ]]></handler>
	
	        <handler name="onmouseout"><![CDATA[
	            if (!classroot.isselected && classroot.isenabled) this.setAttribute('frame', 1); 
	            gTooltip.hideTooltip ();
	            lz.Timer.removeTimer (classroot.tooltipdel);
	        ]]></handler>
	
	        <handler name="onclick">
	        	if(classroot.isswiped == true) {
					classroot.isswiped = false;
					return;
			    }
	            if (classroot.isenabled) {
	                gController.setManipulativeSelState (classroot.toolid, 
	                                                         classroot.isselected ? 'up' : 'sel');
	            }
	            lz.Timer.removeTimer (classroot.tooltipdel);
	        </handler>
	        
	        <handler name="onswipe" args="s">
				if (s.direction === 'up' || s.direction === 'down') {
				    return;
				}
				classroot.isswiped = true;
				gManipulativeBar.animate('x', s.velocity, 500, true, {motion: 'easeout'});
			</handler>
	
	        <method name="showTooltip">
	            gTooltip.showTooltip (classroot.tooltip);
	        </method>
		</view>
		<view name="scratchpadBtn_shadow" tintcolor="0x000000" resource="manipulative_shadow" x="6"
        	  opacity="0.5"
        	  width="37" height="43" stretches="both"/>
        	  
        <view name="gap" width="16" visible="${parent.scratchpadBtn.visible}" x="${parent.scratchpadBtn.x+parent.scratchpadBtn.width}" y="${parent.scratchpadBtn.y}"/>
    </class>

</library>
