<library>
    <include href="base/basebuttonrepeater.lzx" />
    <include href="basescrollbar.lzx" />
    <include href="utils/layouts/stableborderlayout.lzx"/>
    <include href="scrollbar_yresources.lzx"/>

<class name="vscrollbarnew" extends="basescrollbarnew"
    bgcolor="0x595959"
    axis="y">

    <!--- If this is defined, it will be used as the scrollbar's background
          color when it is disabled. If not provided, the scrollbar will use
          the bgcolor of its closest parent that has a bgcolor defined.  -->
    <attribute name="disabledbgcolor" value="null"/>
    <!--- @keywords private -->
    <attribute name="width" value="14"/>

    <handler name="oninit" reference="canvas" >
        this._showEnabled();
    </handler>
    
    <!--- @keywords private -->
    <method name="_showEnabled">
        <![CDATA[
        if (!_enabled) {
            var newbgcolor = this.disabledbgcolor;
            if (newbgcolor == null) {
                var p = immediateparent;
                while (p.bgcolor == null && p != canvas) {
                    p = p.immediateparent;
                }
                newbgcolor = p.bgcolor;
                if (newbgcolor == null) newbgcolor = 0xffffff;
            }
            this.setAttribute('bgcolor', newbgcolor);
        } else {
            this.setAttribute('bgcolor', 0x595959);
        }
        super._showEnabled();
    ]]>
    </method>


    <!-- up arrow -->
    <view name="toparrow">
        <basescrollarrownew x="1" y="1"
            resource="lzscrollbar_ybuttontop_rsc"
            direction="-1"/>
    </view>
    <view name="scrolltrack">
        <!-- top of the scroll track -->
        <basescrolltracknew name="top"
            x="1" resource="lzscrollbar_ytrack_rsc" stretches="height"
            overResourceNumber="0"
            downResourceNumber="2"
            disabledResourceNumber="3"
            direction="-1">
            <attribute name="height" value="${parent.thumb.y}"/>
            <attribute name="width" value="${parent.width}"/>
        </basescrolltracknew>

        <!-- thumb -->
         <basescrollthumbnew name="thumb" x="1">
             <view resource="lzscrollbar_ythumbtop_rsc"/>
             <view resource="lzscrollbar_ythumbmiddle_rsc" stretches="both"/>
             <view resource="lzscrollbar_ythumbbottom_rsc"/>
             <stableborderlayout axis="y"/>
             <!-- note: stableborderlayout only acts on the first three views -->
             <view resource="lzscrollbar_ythumbgripper_rsc" x="1"
                 height="${Math.min(200, parent.height-16)}" width="11"
                 clip="true" valign="middle"/>
        </basescrollthumbnew>

        <!-- bottom of the scroll track -->
        <basescrolltracknew name="bottom"
            x="1" resource="lzscrollbar_ytrack_rsc" stretches="height"
            overResourceNumber="0"
            downResourceNumber="2"
            disabledResourceNumber="3">
            <attribute name="y" value="${parent.thumb.y+parent.thumb.height}"/>
            <attribute name="height"
                value="${parent.height - parent.thumb.y - parent.thumb.height}"/>
            <attribute name="width" value="${parent.width}"/>
        </basescrolltracknew>


    </view>     <!-- scrolltrack -->

    <!-- down arrow -->
    <view height="14" name="bottomarrow">
        <basescrollarrownew x="1"
            resource="lzscrollbar_ybuttonbottom_rsc"/>
    </view>
    <stableborderlayout axis="y"/>


</class>
</library>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2008 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
<!-- @LZX_VERSION@                                                         -->
