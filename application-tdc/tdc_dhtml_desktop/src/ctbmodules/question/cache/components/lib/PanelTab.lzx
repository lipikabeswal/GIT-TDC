<library>
	
    <class name="PanelTab" 
           width="${this.bg.width}" 
           height="${this.bg.height}">
         <attribute name="tabHeight" type="number" value="${this.bg.height}" />
       

        <handler name="oninit">
           thetitle.setAttribute('fgcolor', Number(gController.questionFontColor)); 
			//thetitle.setAttribute ('y', (this.height - this.thetitle.height)/2 + this.height/5);
        </handler>
 
        <method name="selectIt">
        	//gReadableText.read(gReadableText.stripHtmlTags(this.thetitle.text),false);
            this.setSelectedTab(true, true);
        </method>
       
		
        <method name="select" args="issel"><![CDATA[
			var cln;	
			var clones = classroot.tabctrl.tab.clones;
			for(var i=0;i<clones.length;i++){
				if(clones[i].clonenumber == this.clonenumber){
					cln=clones[i];
					break;
				}
			}
            if (issel) {
				if(cln.thetitle){
            		cln.thetitle.setAttribute('clickable', false);
				}
                this.bringToFront();
                if (cln ['thetitle']) {
					this.setAttribute("height",this.tabHeight);
                    cln.thetitle.setAttribute ('y', (this.height - cln.thetitle.height)/2 + this.height/10);
                    
                }
              // this.setAttribute("height",this.tabHeight);	
              	this.parent.setAttribute("height",this.height+2);
				if (cln ['bg']){
					cln.bg.setAttribute("y",2);
				    cln.bg.tabImage();
					cln.bg.getDisplayObject().setAttribute('style','clip: auto; height:'+cln.bg.height+'; width:'+cln.bg.width+'; top:'+cln.bg.y+'');
					cln.overlay.setAttribute('visible',true);
				}
			   
            } else {
				if(cln.thetitle){
            		cln.thetitle.setAttribute('clickable', true);
				}
                if (cln ['thetitle']) {
					 this.setAttribute("height",this.tabHeight-6);
                    cln.thetitle.setAttribute ('y', (this.height - cln.thetitle.height)/2 + this.height/2);
                    
                }
               // this.setAttribute("height",this.tabHeight-6);
				if (cln ['bg']){
					cln.bg.setAttribute("y",8);
					cln.bg.tabImage();
					//cln.bg.setAttribute('height',this.height-5);
					//cln.bg.setAttribute('clip',true);
					var clipValue = 'rect(0px '+cln.bg.width+'px '+(cln.bg.height-6)+'px 0px)';
					cln.bg.getDisplayObject().setAttribute('style','clip: '+clipValue+'; height:'+cln.bg.height+'; width:'+cln.bg.width+'; top:'+cln.bg.y+'');
					cln.overlay.setAttribute('visible',false);
				}
            }
           	]]>
        </method>

 	<view name="bg"
              width="${classroot.thetitle.width + 22}"
              height="${classroot.thetitle.height + 10}" >
        
        <method name="tabImage">
        	var bgcolor=(gController.questionBgColor || "0x"+gController.questionBgColor.toString(16) || gController.questionBgColor.toString(16));
        	if(bgcolor == 0xFFFFFF){
				this.setAttribute("resource","white_tab");
			}
			else if(bgcolor == 0x000000){
				this.setAttribute("resource","black_tab");
			}
			else if(bgcolor == 0x000080){
				this.setAttribute("resource","dblue_tab");
			}
			else if(bgcolor == 0xCCECFF){
				this.setAttribute("resource","lblue_tab");
			}
			else if(bgcolor == 0xFFCCCC){
				this.setAttribute("resource","pink_tab");
			}
			else if(bgcolor == 0xFFFFB0){
				this.setAttribute("resource","yellow_tab");
			}
			
			this.setAttribute("stretches","both");
        </method>
	</view>
	<view name="overlay" 
          height="4"
		  width="${gController.hasFontAccommodation?(parent.bg.width-this.x-4):(parent.bg.width-this.x-2)}"
		  x="${gController.hasFontAccommodation?(parent.bg.x+3):(parent.bg.x+2)}"
		  y="${parent.bg.height+1}"
		  bgcolor="${gController.questionBgColor}"
		  visible="false"/>
        <text name="thetitle" datapath="@title" align="center">
        	<handler name="ontext">
        		var elm = this.getDisplayObject();
        		var fontSize = 0;
        		if(gController.hasFontAccommodation){
        			fontSize = 18;
        		}
        		else{
        			fontSize = 12;
        		}
        		elm.setAttribute('style','font-size: ' + fontSize + 'px; white-space: nowrap; font-family: CTB;');
        	</handler>
	        <handler name="onclick">
				//gReadableText.read(gReadableText.stripHtmlTags(this.text),false);
				parent.selectIt();
	        </handler>
        
        </text>
	
    </class>

</library>