<library>

    <class name="TimeStatus"
           datapath="dssubtest:/subtest">

        <attribute name="uienabled"
                   value="$path{ 'dsdisplay:/display/@enabled' }"/>
        <attribute name="pausable"
                   value="$path{ 'dssubtest:/subtest/testing_session_data/lms.student.accommodations/@rest_break' }"/>

        <simplelayout axis="x" spacing="10"/>

        <view y="22">
            <simplelayout axis="x" spacing="10"/>
             <basebutton resource="music_btn" id="gMusicButton"
                        enabled="${ classroot.uienabled == true }"
                        visible="${gController.audible == true}"
                        disabledResourceNumber="0"
                        width="30" height="30" stretches="both"
                        onclick="gMusicPlayer.togglePopup()">
						<handler name="onmouseover">
                           lz.Cursor.showHandCursor(true);
				        </handler>
				        <handler name="onmouseout">
				            lz.Cursor.showHandCursor(false);
				        </handler>
			</basebutton>
            <basebutton resource="pause_time_btn" id="gPauseButton"
                        enabled="${ classroot.uienabled == true }"
                        onclick="gController.pauseTest ()"
                        visible="${ classroot.pausable == true }"
                        disabledResourceNumber="0">
                        <handler name="onmouseover">
                           lz.Cursor.showHandCursor(true);
				        </handler>
				        <handler name="onmouseout">
				            lz.Cursor.showHandCursor(false);
				        </handler>
			</basebutton>
            <basebutton resource="stop_time_btn" name="stopbutton" id="gStopButton"
                        enabled="${ classroot.uienabled == true }"
                        onclick="gController.stopTest ()"
                        disabledResourceNumber="0">
                        <handler name="onmouseover">
                           lz.Cursor.showHandCursor(true);
				        </handler>
				        <handler name="onmouseout">
				            lz.Cursor.showHandCursor(false);
				        </handler>
			</basebutton>

            <text visible="${(classroot.timerctrl.isuntimed == 'true') || (classroot.timerctrl.isuntimed == true) }"
                  options="ignorelayout" fgcolor="white" fontsize="15"
                  x="${ parent.stopbutton.x + ((parent.stopbutton.width - width)/2) }"
                  y="-24">
                  
                  <handler name="oninit">
	               		var elm=this.getDisplayObject();
	               		elm.setAttribute('style','font-size: 15px; line-height: 17px; pointer-events: none; width: auto; height: 17px;');
	               	</handler>
                Untimed Test
            </text>
        </view>

        <view name="timerctrl">

            <attribute name="showtime"
                       value="$path{ 'dsdisplay:/display/@showtime' }"
                       setter="setShowTime( showtime )"/>
            <attribute name="isuntimed"
                       value="$path{ 'dsdisplay:/display/@untimed' }"/>

            <handler args="u" name="onisuntimed"><![CDATA[
				//Debug.write("isUntimerd from time status" , isuntimed);
                setShowTime( showtime );
            ]]></handler>

            <method name="setShowTime" args="show">
            	Debug.write("classroot.uienabled****** ",classroot.uienabled);
                if ( 'true' == isuntimed || "true" == isuntimed || true == isuntimed) {
                    thetime.setAttribute( 'visible', false );
                    showhidetime.setAttribute( 'visible', false );
                } else {
                    if ( typeof( show ) == 'string' ) {
                        show = show == 'true';
                    }
                    showhidetime.setAttribute( 'visible', true );
                    showhidetime.setAttribute( 'statenum', show ? 1 : 0 );
                    thetime.setAttribute( 'visible', show );
                }
                this.showtime = show;
            </method>
            
            <text name="thetime" x="68" y="-2"
                  resize="true" fgcolor="white" fontsize="15"
                  datapath="dsdisplay:/display/@timeleft">
            	<handler name="ontext">
            		var elm=this.getDisplayObject();
	               	elm.setAttribute('style','font-size: 15px; line-height: 18px; pointer-events: none; width: auto; height: 18px;');
            	</handler>
            </text>

            <multistatebutton name="showhidetime" y="22" 
                              resource="show_hide_timer_btn"
                              statelength="3" maxstate="1"
                              enabled="${ classroot.uienabled == true}"
                              disabledResourceNumber="0">
                <handler name="onclick">
                    gController.toggleTimer();
                </handler>
                <handler name="onmouseover">
                         lz.Cursor.showHandCursor(true);
		        </handler>
		        <handler name="onmouseout">
		            lz.Cursor.showHandCursor(false);
		        </handler>
            </multistatebutton>
        </view>
    </class>

    
</library>